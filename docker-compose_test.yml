services:
  api:
    container_name: middle_practicum_api_test
    image: async_api_image
    build: .
    restart: always
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 8000:8000
    command: uvicorn main:app --reload --host $SERVICE_HOST --port $SERVICE_PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test -d test" ]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      - postgres
      - redis
    networks:
      - default_test

  postgres:
    container_name: middle_practicum_auth_postgres_test
    image: postgres:16.0
    ports:
      - "5432:5432"
    env_file:
      - .env
    networks:
      - default_test


  redis:
    container_name: middle_practicum_auth_redis_test
    image: redis:latest
    env_file: .env
    ports:
      - 6380:6379
    networks:
      - default_test
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s



  tests:
    container_name: middle_practicum_auth_tests
    image: async_api_image
    env_file: .env
    entrypoint: >
      sh -c "pip install --no-cache-dir -r ../requirements.txt
      && python3 tests/functional/utils/wait_for_postgres.py
      && python3 tests/functional/utils/wait_for_redis.py
      && pytest tests/functional"
    depends_on:
      - postgres
      - redis
      - api
    networks:
      - default_test

networks:
  default_test:
